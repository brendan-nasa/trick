name: AlmaLinux CI

on:
  schedule:
    - cron: "0 0 * * 0" # weekly
  workflow_dispatch: # allow manual trigger
  push:
    branches:
      - '**'

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        almalinux-version: [8, 9, 10]
        java: [21]

    runs-on: ubuntu-latest
    container:
      image: almalinux:${{ matrix.almalinux-version }}

    steps:
      - name: Enable extra repos
        run: |
          dnf install -y 'dnf-command(config-manager)'
          if [ "${{ matrix.almalinux-version }}" == "8" ]; then
            dnf config-manager --set-enabled
            dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
          elif [ "${{ matrix.almalinux-version }}" == "9" ]; then
            dnf config-manager --set-enabled
            dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
          elif [ "${{ matrix.almalinux-version }}" == "10" ]; then
            dnf config-manager --set-enabled
            dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-10.noarch.rpm
          fi

      - name: Update package manager
        run: |
          dnf -y upgrade

      - name: Install dependencies
        run: |
          dnf install -y \
            clang-devel \
            gcc \
            gcc-c++ \
            java-21-openjdk-devel \
            libxml2-devel \
            llvm-devel \
            llvm-static \
            ncurses-devel \
            openmotif \
            openmotif-devel \
            perl \
            perl-Digest-MD5 \
            udunits2 \
            udunits2-devel \
            which \
            zlib-devel \
            python3-devel \
            swig \
            diffutils \
            git \
            cmake \
            flex \
            bison \
            maven \
            zip \
            gtest-devel

      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java }}

      - name: Checkout repository
        uses: actions/checkout@v5
        
      - name: Configure Trick
        run: ./configure

      - name: Build Trick
        run: |
          export MAKEFLAGS=-j"$(nproc)"
          export JAVA_HOME="$(dirname "$(dirname "$(readlink -f "$(which java)")")")"
          make

      - name: Run tests
        run: |
          cd share/trick/trickops/
          python3 -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          cd ../../../
          make test
